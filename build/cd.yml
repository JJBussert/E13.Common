pr: none

trigger:
  branches:
    include:
      - master
      
pool:
  vmImage: ubuntu-latest

# This name is also the build_number
name: $(date:yyyy).$(DayOfYear).$(rev:r)

variables:
- name: createRelease
  value: false

stages:
- stage: pre
  jobs:
  - job: setup
    steps:
    - checkout: self
      persistCredentials: true

    - task: PowerShell@2
      condition: eq('${ variables.createRelease }', 'true')
      inputs:
        targetType: 'inline'
        script: |
          # Write your PowerShell commands here.
      
          Write-Host "Hello World"

    - task: UseDotNet@2
      displayName: 'Use .Net Core sdk 5.x'
      inputs:
        version: 5.x
        includePreviewVersions: true

    - task: PowerShell@2
      displayName: 'Tag Build'
      inputs:
        filePath: '$(System.DefaultWorkingDirectory)/build/scripts/tagbuild.ps1'
        pwsh: true

- stage: Batch0
  jobs:
  - template: templates/job_nuget_github.yml
    parameters:
      name: core
      project: E13.Common.Core

- stage: Batch1
  dependsOn: Batch0
  jobs:
  - template: templates/job_nuget_github.yml
    parameters:
      name: nunit
      project: E13.Common.Nunit

  - template: templates/job_nuget_github.yml
    parameters:
      name: domain
      project: E13.Common.Domain

  - template: templates/job_nuget_github.yml
    parameters:
      name: restease
      project: E13.Common.RestEase

  - template: templates/job_nuget_github.yml
    parameters:
      name: infra
      project: E13.Common.Infra

#  - template: templates/job_npm.yml
#    parameters:
#      name: react
#      project: E13.Common.React

- stage: Batch2
  dependsOn: Batch1
  jobs:
  - template: templates/job_nuget_github.yml
    parameters:
      name: data
      project: E13.Common.Data.Db

  - template: templates/job_nuget_github.yml
    parameters:
      name: aspnet
      project: E13.Common.AspNet

- stage: Batch3  
  dependsOn: Batch2
  jobs:
  - template: templates/job_nuget_github.yml
    parameters:
      name: api
      project: E13.Common.Api

  - template: templates/job_nuget_github.yml
    parameters:
      name: blazor
      project: E13.Common.Blazor

  - template: templates/job_nuget_github.yml
    parameters:
      name: logic
      project: E13.Common.Logic

  - template: templates/job_nuget_github.yml
    parameters:
      name: nunit_ui
      project: E13.Common.Nunit.UI

- stage: Batch4  
  dependsOn: Batch3
  jobs:
  - template: templates/job_nuget_github.yml
    parameters:
      name: nunit_api
      project: E13.Common.Nunit.Api

- stage: Post
  dependsOn: Batch4
  jobs:
    - job: git_cleanup
      steps:
        - pwsh: |
            git checkout --track -b master origin/master
            git checkout --track -b deploy origin/deploy
            git merge master
            Write-Host "Ready to push changes to deploy"
            git remote -v
            git remote set-url origin https://${env:GITHUBKEY}@github.com/e13tech/common
            git remote -v
            git push

          name: merge_master_into_deploy
          env:
            GITHUBKEY: $(GITHUBKEY)
        - task: GitHubRelease@1
          inputs:
            gitHubConnection: 'github.com_JJBussert'
            repositoryName: '$(Build.Repository.Name)'
            action: 'create'
            target: '$(Build.SourceVersion)'
            tagSource: 'userSpecifiedTag'
            tag: '$(Build.BuildNumber)'
            changeLogCompareToRelease: 'lastFullRelease'
            changeLogType: 'commitBased'
            
#- stage: Post
#  dependsOn: Batch3
#  jobs:
#    - job: publish
#      steps:
      
#      - task: DotNetCoreCLI@2
#        displayName: dotnetcore Restore
#        inputs:
#          command: restore
#          projects: '**/*TestWeb.*.csproj'
#          vstsFeed: 'a2c5aab5-1193-4bda-b55e-a1eab6bb4c0e'
      
#      - task: DotNetCoreCLI@2
#        displayName: dotnetcore Restore
#        inputs:
#          command: restore
#          projects: '**/*TestsApi.csproj'
#          vstsFeed: 'a2c5aab5-1193-4bda-b55e-a1eab6bb4c0e'
      
#      - task: DotNetCoreCLI@2
#        displayName: dotnetcore Restore
#        inputs:
#          command: restore
#          projects: '**/*TestsUI.csproj'
#          vstsFeed: 'a2c5aab5-1193-4bda-b55e-a1eab6bb4c0e'
          
#      - task: DotNetCoreCLI@2
#        displayName: dotnetcore Build
#        inputs:
#          command: build
#          projects: '**/*TestWeb.*.csproj'
          
#      - task: DotNetCoreCLI@2
#        displayName: dotnetcore Build
#        inputs:
#          command: build
#          projects: '**/*TestsApi.csproj'
          
#      - task: DotNetCoreCLI@2
#        displayName: dotnetcore Build
#        inputs:
#          command: build
#          projects: '**/*TestsUI.csproj'

#      - task: PublishBuildArtifacts@1
#        displayName: 'Publish Artifact'
#        inputs:
#          PathtoPublish: '$(build.artifactstagingdirectory)'
#        enabled: false
#        condition: succeededOrFailed()
    
